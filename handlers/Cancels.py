from loader import dp
from filters import IsRegistered, IsNotRegistered
from states import register, add_notes, feedback
from aiogram.dispatcher import FSMContext
from aiogram import types
from keyboards.default import main_menu


'''
@dp.message_handler(IsRegistered(), state=[feedback.states, add_notes.states], text="–û—Ç–º–µ–Ω–∞‚ùå")
async def cancel_note(message: types.Message, state: FSMContext):  # –æ—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏
    await state.reset_data()
    await state.finish()
    await message.answer('–ó–∞–ø–∏—Å—å –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞', reply_markup=main_menu)
'''


@dp.message_handler(state=feedback.grade)
async def grade_feedback_error(message: types.Message):
    await message.answer('–¢—ã –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n'
                         '–¢—ã –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5 –≤–∫–ª—é—á–∞—è')


@dp.message_handler(state=[register.time_weather_notify, add_notes.time_notify])
async def time_error(message: types.Message, state: FSMContext):
    await message.answer("–¢—ã –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n"
                         "–§–æ—Ä–º–∞—Ç: hh:mm (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:30)")


@dp.message_handler(state=add_notes.date_notify)
async def date_error(message: types.Message, state: FSMContext):
    await message.answer("–¢—ã –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n"
                         "–§–æ—Ä–º–∞—Ç: dd-mm-yy (–Ω–∞–ø—Ä–∏–º–µ—Ä, 31-12-22)")


@dp.message_handler()
async def unknown_cmd(message: types.Message):
    await message.answer("–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º —Ç—ã üôÅ\n"
                         "–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–Ω—è—Ç–Ω–æ–µ")