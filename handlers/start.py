from aiogram import types
from aiogram.dispatcher import FSMContext

from filters import IsNotRegistered
from loader import dp
from keyboards.default import start_menu, main_menu

from random import randint as rd


@dp.message_handler(IsNotRegistered(), commands=["start", "help"], state="*")
async def command_start(message: types.Message, state: FSMContext):
    if state is not None:
        await state.finish()
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!üëã\n'
                         f'–¢—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ?üßê –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è,\n'
                         f'—á—Ç–æ–±—ã –º–Ω–µ –±—ã–ª–æ –ª–µ–≥—á–µ —Ç–µ–±—è –æ–ø–æ–≤–µ—â–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π!',
                         reply_markup=start_menu)


@dp.message_handler(commands=["start", "help"], state="*")
async def command_help(message: types.Message, state: FSMContext):
    if state is not None:
        await state.finish()
    answer_for_user = f'''–ü—Ä–∏–≤–µ—Ç! –Ø –£–º–Ω—ã–π –ë–æ—Ç! ü§ìü§ñ
–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ —Ç–∞–∫ —Å—á–∏—Ç–∞–µ—Ç –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å...üòÑ\n
–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —è —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –∫–∞–∫ –±–æ—Ç –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ –∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è.
–í –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç: ‚õÖ–æ–ø–æ–≤–µ—â–∞—Ç—å –æ –ø—Ä–æ–≥–Ω–æ–∑–µ –ø–æ–≥–æ–¥—ã, ‚úè–∑–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–≤–æ–∏ –∑–∞–ø–∏—Å–∏ –∏ üïì–Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –Ω–∏—Ö –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ —Ç–æ–±–æ–π –≤—Ä–µ–º—è. 
–ù–æ –Ω–∏–∫—Ç–æ –∑–Ω–∞–µ—Ç, —á—Ç–æ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–¥—É–º–∞–µ—Ç –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å. ü•∞ '''

    if rd(0, 10) == 5:
        answer_for_user += """\n\n<span class="tg-spoiler">üòé–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è: –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –æ—Ç–∑—ã–≤—ã, —Ç–∞–∫–∂–µ 
–±—É–¥—É –∫—Ä–∞–π–Ω–µ –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª–µ–Ω –µ—Å–ª–∏ –≤—ã –Ω–∞–ø–∏—à–µ—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
–Ω–∞ —Å—á–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —ç—Ç–æ–≥–æ –£–º–Ω–æ–≥–æ –ë–æ—Ç–∞</span>"""

    await message.answer(answer_for_user, reply_markup=main_menu)
